Introdução a programação e pensamentos computacionais 
•Sistema de desktop são sistemas autônomos 

Ux Design
•Melhorar a satisfação do cliente 
•Pesquisa sobre os clientes
•Protótipos 
•Objetivos 

UI design 
•Padrões visuais 
•Tipografia 
•Design 
•Cores layouts

Onde crio ou escrevo códigos?
•	Ide: ambiente de desenvolvimento integrado a um software para criar aplicações que combina ferramentas comuns de desenvolvimento em uma única interface gráfica do usuário (GUI).
•	Framework: é um facilitador. Ele traz diversas soluções já pré-definidas, afinal a atuação de um programador pode ter muita criatividade, mas traz também aspectos mecânicos de repetição de tarefas. Ex: de framework: angular, laravel e vue.
•	Front-end: o desenvolvedor Front End é que programa a parte visual de um site ou aplicativo, ou seja, aquilo que conseguimos interagir. Quem trabalha com Front End é responsável por desenvolver por meio de código uma interface gráfica, normalmente com as tecnologias base da Web (HTML, CSS e JavaScript).
•	 Back-end: o Back End trabalha em boa parte dos casos fazendo a ponte entre os dados que vem do navegador rumo ao banco de dados e vice-versa, sempre aplicando as devidas regras de negócio, validações e garantias em um ambiente onde o usuário final não tenha acesso e possa manipular algo. Exemplo: JAVA, PHP e C#.
•	API: (acronimo de application programming interface) (interface de programação de aplicativo. E um caminho entre um aplicativo e outro por exemplo entre front-end e o back-end.
•	Full stack: programador front-end e back-end.
•	QA (Quality Assurance): o profissional de QA deve ter conhecimento sobre as atividades de projeto, além de ter um perfil analítico. Ele verifica se os padrões de qualidade estão sendo atendidos e se todos os requisitos mínimos esperados no produto serão entregues.

Pensamento computacional
  Formado por quatro pilares 
•	Decomposição: decompor um problema em varias etapas para facilitar sua resolução.
•	Reconhecimento de padrões: identificar padrões ou tendências. Similaridades e diferenças entre os problemas.
•	Abstração: extrapolar o conceito do problema para uma forma generalista.
•	Automatizar: design de algoritimos. Definir passo a passo para solução de problemas. 

Introdução ao git e o github 

o Git Bash é um terminal extendido para otimizar o uso do git 

Links para dowload do git: https://git-scm.com/

Comandos básico do git.

                    Windows                    Unix 
Listar                dir                       ls

Navegar 
entre as              cd/                       cd
pastas

Voltar 
uma pasta             cd..                      cd..

limpar a             clear                      cls
tela 

criar 
pasta                mkdir                      mkdir 

deletar 
arquivos             del                         del 

deletar 
pastas              Rmdir                                     
